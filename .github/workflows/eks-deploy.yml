name: Build and Deploy to ECR

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: write


jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-northeast-2
      ECR_REPO: 534334097321.dkr.ecr.ap-northeast-2.amazonaws.com/pet/waserver

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::534334097321:role/github-actions-role
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Check for application source code changes
        id: check_changes
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          echo "$CHANGED_FILES"

          NON_K8S_CHANGED=$(echo "$CHANGED_FILES" | grep -v '^k8s/' || true)

          if [ -n "$NON_K8S_CHANGED" ]; then
            echo "code_changed=true" >> $GITHUB_OUTPUT
          else
            echo "code_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::534334097321:role/github-actions-role
          aws-region: ${{ env.AWS_REGION }}


      - name: Set image tag
        if: steps.check_changes.outputs.code_changed == 'true'
        id: vars
        run: echo "TAG=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
      
      - name: Build Docker image
        if: steps.check_changes.outputs.code_changed == 'true'
        run: |
          docker build -t $ECR_REPO:$TAG .
      
      - name: Push to ECR
        if: steps.check_changes.outputs.code_changed == 'true'
        run: |
          docker push $ECR_REPO:$TAG
      - name: Update Kubernetes manifest with new image tag (if exists)
        if: steps.check_changes.outputs.code_changed == 'true'
        run: |
          if [ -f k8s/base/pet-was-deploy.yaml ]; then
            sed -i "s|\(image: .*/waserver:\).*|\1${TAG}|" k8s/base/pet-was-deploy.yaml
          else
            echo "k8s/base/pet-was-deploy.yaml does not exist. Skipping image tag update."
          fi

      - name: Commit and push new image tag (if file exists)
        if: steps.check_changes.outputs.code_changed == 'true'
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          if [ -f k8s/base/pet-was-deploy.yaml ]; then
            git config user.name "Dote10"
            git config user.email "your-email@example.com"
            git remote set-url origin https://x-access-token:${GH_PAT}@github.com/Dote10/petclinic_btc.git
            git add k8s/base/pet-was-deploy.yaml
            git commit -m "Update image tag to $TAG" || echo "No changes to commit"
            git push origin main
          else
            echo "k8s/base/pet-was-deploy.yaml does not exist. Skipping commit and push."
          fi

      # - name: Update Kubernetes manifest with new image tag (if exists)
      #   run: |
      #     if [ -f k8s/base/pet-was-deploy.yaml ]; then
      #       sed -i "s|\(image: .*/waserver:\).*|\1${TAG}|" k8s/base/pet-was-deploy.yaml
      #     else
      #       echo "k8s/base/pet-was-deploy.yaml does not exist. Skipping image tag update."
      #     fi

      # - name: Commit and push new image tag (if file exists)
      #   env:
      #     GH_PAT: ${{ secrets.GH_PAT }}
      #   run: |
      #     if [ -f k8s/base/pet-was-deploy.yaml ]; then
      #       git config user.name "Dote10"
      #       git config user.email "your-email@example.com"
      #       git remote set-url origin https://x-access-token:${GH_PAT}@github.com/Dote10/petclinic_btc.git
      #       git add k8s/base/pet-was-deploy.yaml
      #       git commit -m "Update image tag to $TAG" || echo "No changes to commit"
      #       git push origin main
      #     else
      #       echo "k8s/base/pet-was-deploy.yaml does not exist. Skipping commit and push."
      #     fi

      # - name: Set up Git identity
      #   run: |
      #     git config user.name "Dote10"
      #     git config user.email "zoqol@daum.net"

      # - name: Push updated image tag to repo
      #   env:
      #     GH_PAT: ${{ secrets.GH_PAT }}
      #   run: |
      #     git remote set-url origin https://x-access-token:${GH_PAT}@github.com/Dote10/petclinic_btc.git
      #     git add .
      #     git commit -m "Update image tag to $TAG" || echo "No changes to commit"
      #     git push origin main

      # - name: Commit and push changes
      #   run: |
      #     git config user.name "github-actions"
      #     git config user.email "github-actions@users.noreply.github.com"
      #     git commit -am "Update image tag to $TAG"
      #     git push origin main

      # - name: Update Kubernetes manifest with new image tag
      #   run: |
      #     sed -i "s|\(image: .*/waserver:\).*|\1${TAG}|" k8s/pet-was-deploy.yaml

      # - name: Commit and push changes
      #   run: |
      #     git config user.name "github-actions"
      #     git config user.email "github-actions@users.noreply.github.com"
      #     git commit -am "Update image tag to $TAG"
      #     git push origin main

      #수정된 소스코드가 있을때만 빌드 
      # - name: Set image tag
      #   id: vars
      #   run: echo "TAG=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      # - name: Build Docker image
      #   run: |
      #     docker build -t $ECR_REPO:$TAG .

      # - name: Push to ECR
      #   run: |
      #     docker push $ECR_REPO:$TAG